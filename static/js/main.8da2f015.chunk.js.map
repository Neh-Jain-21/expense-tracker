{"version":3,"sources":["components/Header.js","context/AppReducer.js","context/GlobalState.js","components/Balance.js","components/incomeExpenses.js","components/Transaction.js","components/TransactionList.js","components/AddTransaction.js","App.js","index.js"],"names":["Header","AppReducer","state","action","type","transaction","filter","elem","id","payload","initialState","GlobalContext","createContext","GlobalProvider","children","useReducer","dispatch","Provider","value","deleteTransaction","addTransaction","Balance","total","useContext","map","amount","reduce","acc","item","toFixed","IncomeExpenses","amounts","income","expense","className","Transaction","sign","classList","text","Math","abs","onClick","TransactionList","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","floor","random","htmlFor","onChange","event","target","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8da2f015.chunk.js","sourcesContent":["/** @format */\r\n\r\nimport React from \"react\";\r\n\r\nconst Header = () => {\r\n    return <>Expense Tracker</>;\r\n};\r\n\r\nexport default Header;\r\n","/** @format */\r\n\r\nconst AppReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"DELETE\":\r\n            return {\r\n                ...state,\r\n                transaction: state.transaction.filter(\r\n                    (elem) => elem.id !== action.payload\r\n                ),\r\n            };\r\n        case \"ADD\":\r\n            return {\r\n                ...state,\r\n                transaction: [action.payload, ...state.transaction],\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default AppReducer;\r\n","/** @format */\r\n\r\nimport React, { createContext, useReducer } from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState = {\r\n    transaction: [],\r\n};\r\n\r\n//create context\r\nexport const GlobalContext = createContext(initialState);\r\n\r\n//Provider Component\r\nexport const GlobalProvider = ({ children }) => {\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n\r\n    //Actions\r\n    function deleteTransaction(id) {\r\n        dispatch({\r\n            type: \"DELETE\",\r\n            payload: id,\r\n        });\r\n    }\r\n\r\n    function addTransaction(transaction) {\r\n        dispatch({\r\n            type: \"ADD\",\r\n            payload: transaction,\r\n        });\r\n    }\r\n\r\n    return (\r\n        <GlobalContext.Provider\r\n            value={{\r\n                transaction: state.transaction,\r\n                deleteTransaction,\r\n                addTransaction,\r\n            }}\r\n        >\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n","/** @format */\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Balance = () => {\r\n    const { transaction } = useContext(GlobalContext);\r\n\r\n    const amounts = transaction.map((elem) => elem.amount);\r\n    const total = amounts.reduce((acc, item) => (acc += item), 0).toFixed(2);\r\n\r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1>Rs {total}</h1>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Balance;\r\n","/** @format */\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst IncomeExpenses = () => {\r\n    const { transaction } = useContext(GlobalContext);\r\n\r\n    const amounts = transaction.map((elem) => elem.amount);\r\n\r\n    const income = amounts\r\n        .filter((item) => item > 0)\r\n        .reduce((acc, item) => (acc += item), 0)\r\n        .toFixed(2);\r\n\r\n    const expense = (\r\n        amounts\r\n            .filter((item) => item < 0)\r\n            .reduce((acc, item) => (acc += item), 0) * -1\r\n    ).toFixed(2);\r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n            <div>\r\n                <h4>Income</h4>\r\n                <p id=\"money-plus\" className=\"money plus\">\r\n                    +Rs {income}\r\n                </p>\r\n            </div>\r\n            <div>\r\n                <h4>Expense</h4>\r\n                <p id=\"money-minus\" className=\"money minus\">\r\n                    -Rs {expense}\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default IncomeExpenses;\r\n","/** @format */\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst Transaction = ({ transaction }) => {\r\n    const { deleteTransaction } = useContext(GlobalContext);\r\n\r\n    const sign = transaction.amount < 0 ? \"-\" : \"+\";\r\n    const classList = transaction.amount < 0 ? \"minus\" : \"plus\";\r\n    return (\r\n        <li className={classList}>\r\n            {transaction.text}{\" \"}\r\n            <span>\r\n                {sign} {Math.abs(transaction.amount)} Rs\r\n            </span>\r\n            <button\r\n                className=\"delete-btn\"\r\n                onClick={() => deleteTransaction(transaction.id)}\r\n            >\r\n                x\r\n            </button>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Transaction;\r\n","/** @format */\r\n\r\nimport React, { useContext } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\nimport Transaction from \"./Transaction\";\r\n\r\nconst TransactionList = () => {\r\n    const { transaction } = useContext(GlobalContext);\r\n\r\n    return (\r\n        <>\r\n            <h3>History</h3>\r\n            <ul className=\"list\">\r\n                {transaction.map((elem) => (\r\n                    <Transaction key={elem.id} transaction={elem} />\r\n                ))}\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default TransactionList;\r\n","/** @format */\r\n\r\nimport React, { useContext, useState } from \"react\";\r\nimport { GlobalContext } from \"../context/GlobalState\";\r\n\r\nconst AddTransaction = () => {\r\n    const [text, setText] = useState(\"\");\r\n    const [amount, setAmount] = useState(\"\");\r\n\r\n    const { addTransaction } = useContext(GlobalContext);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        setText(\"\");\r\n        setAmount(\"\");\r\n\r\n        const newTransaction = {\r\n            id: Math.floor(Math.random() * 100000000),\r\n            text,\r\n            amount: +amount,\r\n        };\r\n\r\n        addTransaction(newTransaction);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h3>Add new transaction</h3>\r\n            <form onSubmit={onSubmit}>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"text\">Text</label>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={text}\r\n                        onChange={(event) => {\r\n                            setText(event.target.value);\r\n                        }}\r\n                        placeholder=\"Enter text...\"\r\n                    />\r\n                </div>\r\n                <div className=\"form-control\">\r\n                    <label htmlFor=\"amount\">\r\n                        Amount <br />\r\n                        (negative - expense, positive - income)\r\n                    </label>\r\n                    <input\r\n                        type=\"number\"\r\n                        value={amount}\r\n                        onChange={(event) => {\r\n                            setAmount(event.target.value);\r\n                        }}\r\n                        placeholder=\"Enter amount...\"\r\n                    />\r\n                </div>\r\n                <button className=\"btn\">Add transaction</button>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddTransaction;\r\n","/** @format */\r\n\r\nimport React from \"react\";\r\nimport Header from \"./components/Header\";\r\nimport Balance from \"./components/Balance\";\r\nimport IncomeExpenses from \"./components/incomeExpenses\";\r\nimport TransactionList from \"./components/TransactionList\";\r\nimport AddTransaction from \"./components/AddTransaction\";\r\nimport { GlobalProvider } from \"./context/GlobalState\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n    return (\r\n        <GlobalProvider>\r\n            <Header />\r\n            <div className=\"container\">\r\n                <Balance />\r\n                <IncomeExpenses />\r\n                <AddTransaction />\r\n                <TransactionList />\r\n            </div>\r\n        </GlobalProvider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","/** @format */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n    <>\n        <App />\n    </>,\n    document.getElementById(\"root\")\n);\n"],"sourceRoot":""}